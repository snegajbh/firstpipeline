name: Android Emulator Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install ADB and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y adb libpulse0 libgl1-mesa-glx
          adb start-server
          mkdir -p ~/.android
          echo "Generating temporary ADB key"
          openssl genrsa -out ~/.android/adbkey 2048
          openssl rsa -in ~/.android/adbkey -pubout -out ~/.android/adbkey.pub

    
      - name: Start Android Emulator in Docker
        run: |
          # Use a known working image tag
          docker run -d \
            --name android-emulator \
            -p 5554:5554 \
            -p 5555:5555 \
            -e ADBKEY="$(cat ~/.android/adbkey)" \
            -e EMULATOR_ARGS="-no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim" \
            -v $PWD:/app \
            us-docker.pkg.dev/android-emulator-268719/images/33-google-apis-x86_64:33.0.3

          # Wait for emulator to start
          sleep 30
          
          # Connect to emulator
          adb connect localhost:5554
          adb devices
          
          # Wait for device to be ready
          adb wait-for-device
          adb shell settings put global window_animation_scale 0
          adb shell settings put global transition_animation_scale 0
          adb shell settings put global animator_duration_scale 0
          sleep 10

      - name: Run Tests
        run: |
          npm install
          npx wdio run wdio.conf.js
        env:
          APPIUM_HOST: localhost
          APPIUM_PORT: 4723
          ANDROID_DEVICE: localhost:5554
